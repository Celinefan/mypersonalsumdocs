Git GUI的使用

	GitGUI的使用相对来说比直观点。打开它，点克隆就可以输入地址
http://git.gitorious.org/jz4740_project/Binit_test.git 和 目录（这个目录要不存在的，如果已经存在则提示错误，例
如你要放到C:\abc上，哪你就写上C:\abc ，但C:\并没有abc这个目录，这个软件会自动帮你新建这个目录）。库已经存在，
则点打开，然后选择库所在的目录就可以了。创建新的库也类似。
现在假设已经克隆了库。现在对源码作了修改。点重新扫描则让软件检查更改了的文件，并罗列更改了的文件，在左上角选文
件可以看到文件更改详情。点缓存改动，则可以把更改缓冲起来。点签名就是自动给提交描述加上自己的签名（建议每次提交
都加上签名）。然后提交描述下写上更改的说明，最后点提交。你可以经常提交，这样可以方便你日后跟踪库开发过程和查找
历史。一天开发下来，如果你觉得有必要更新服务器的了，哪你就点上传进行更新。要正确上传，哪就得要在菜单的远端里的
add添加网址。名字是给你自己对不同的网址的标识，可任由你自己喜好取名。Location则写上服务器的地址，如Binit_test
的。git@gitorious.org:jz4740_project/Binit_test.git  Further Action则选上Do Nothing Else Now 。最后点add添加。
在点上传时，在新开的窗中上选择你的分支，在目标版本库里Remote 处点右边的键选上刚才add的网址标识。就可以点右下角
的上传按键实行上传。
跟着来要解释一下分支功能，因为Git的其中一个优势是有很强分支管理能力。而且协调开发时必须管理好分支，这是非常重
要的功能。分支有两种性质，一是本地分支，一是跟踪分支（是放在服务器处）。使用菜单里的远端->获取（fetch），这时
可以使跟踪分支同步于服务器的文件。这时你会发现本地分支并不会有任何更新，哪是因为各个分支是独立的，虽然分支名称
一样，但因为存放处不同，所以是完全独立的。就好比两个文件夹（本地和远端）里有相同文件一样。如果用远端更新本地的
分支呢？ 使用菜单合并->本地合并就能实现。假设要同步本地分支abc和跟踪分支abc，哪你就先checkout(菜单分支下)本地
分支，然后点本地合并，在新开窗口中选上跟踪分支下的abc。然后点合并，这时软件就会比较两个分支的区别，把跟踪分支
的修改更新本地分支。成功后，本地分支abc便与跟踪分支无所差别。
现在以一个开发流程解释协调开发过程。先是克隆一个库到本地目录，软件先是在目录下建立起库，开始时会帮你同步跟踪分
支，然后自动使用新建本地分支的方式为你建立一个master的本地分支并checkout，它是从跟踪分支master复制而成，用于本
地使用。因为master是用于各人合并发布的，所以我们并不会直接在master分支下开发（当然如果只有你一个人开发，哪是没
问题，人多了就不行啦！）。这里我建议各人新建属于自己的分支（分支名称用个人的名字标识加上新建日期，例如我的英文
名叫shawn，在2009年2月10日建，哪分支名称为shawn_090210，这样可以方便管理，这是一种软性规定，纯为了管理上的方
便）。创建时需要选上起始版本，也就是说你要创建的分支是由哪个分支上复制而成，可以选择本地分支或跟踪分支，只要你
确认你想从哪个版本开始便可。然后就在这个新建的本地分支上进行开发提交和上传，上传时记得正确选上自己的源端分支，
否则会导至出错的。当开发进行一些时日，源码已经更改了不少，你就需要同步一下你的分支与master。过程是先checkout出
master（点菜单分支->checkout，然后选上本地分支后checkout）。然后再点菜单合并->本地合并。选上你自己的分支后点合
并，如果没有发生版本冲突的话，软件很快便为你合并了master, 这时master的源码就同步了你的分支。然后点上传，更新远
端服务器的master分支。这样一个小小开发周期完成，跟着你可以checkout你的个人所属分支，继续下一个周期的开发。
到现在为止，估计你已经能使用Git Gui实现源码的版本管理，如果还有疑问，可以上QQ群36288077与其它网友交流解疑。本
文档如果有出错或不当之处，请与小帅联系，非常感谢你的帮助！